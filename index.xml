<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>@cescoferraro</title>
    <link>https://cescoferraro.github.io/me/</link>
    <description>Recent content on @cescoferraro</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 21 Sep 2017 03:55:41 -0300</lastBuildDate>
    
	<atom:link href="https://cescoferraro.github.io/me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Gradle with Play framework</title>
      <link>https://cescoferraro.github.io/me/blog/using-gradle-with-play-framework/</link>
      <pubDate>Thu, 21 Sep 2017 03:55:41 -0300</pubDate>
      
      <guid>https://cescoferraro.github.io/me/blog/using-gradle-with-play-framework/</guid>
      <description>Basic Play Framework gradle configuration. It uses 4 plugins. Play plugin needs the java one. The other 2 are IDE specific.
apply plugin: &#39;java&#39; apply plugin: &#39;play&#39; apply plugin: &#39;idea&#39; apply plugin: &#39;eclipse&#39;  Where the play plugins lives!
repositories { mavenCentral() jcenter() maven { name &amp;quot;typesafe-maven-release&amp;quot; url &amp;quot;https://repo.typesafe.com/typesafe/maven-releases&amp;quot; } ivy { name &amp;quot;typesafe-ivy-release&amp;quot; url &amp;quot;https://repo.typesafe.com/typesafe/ivy-releases&amp;quot; layout &amp;quot;ivy&amp;quot; } }  The dependencies of the project.
Note the some of them are duplicates because Eclipse could not find the play dependencie at the classpath</description>
    </item>
    
    <item>
      <title>boil.cescoferraro.xyz </title>
      <link>https://cescoferraro.github.io/me/portifolio/boil/</link>
      <pubDate>Mon, 31 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cescoferraro.github.io/me/portifolio/boil/</guid>
      <description>A cutting edge PWA React.js boilerplated hosted at https://boil.cescoferraro.xyz. A server rendered website that loads in around 3s. Web push notification by üì∂ OneSignal. Works 100% Offline.
   üëÄ react as the view   üî• Redux store ready! All the cool tooling and extensions.   üîÄ redux-first-router as the router.   üöÑ express server.   üéõ Offilne first. Try going offline for a bit.   üî• OneSignal gives us web push Notifications to keep in touch with our customers   üñå ReduxStorage makes the app remember where the user was last time with ALL THE DATA!</description>
    </item>
    
    <item>
      <title>about</title>
      <link>https://cescoferraro.github.io/me/about/</link>
      <pubDate>Tue, 30 May 2017 01:53:46 -0300</pubDate>
      
      <guid>https://cescoferraro.github.io/me/about/</guid>
      <description>Resident Rap DJ of with own headphones. Linux passionate, Gopher, React.js hacker and free software user. Soul surfer when by the coast. Hit me up, let&#39;s write tomorrow&#39;s web today.</description>
    </item>
    
    <item>
      <title>gulp-golang</title>
      <link>https://cescoferraro.github.io/me/portifolio/gulp-golang/</link>
      <pubDate>Fri, 21 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cescoferraro.github.io/me/portifolio/gulp-golang/</guid>
      <description>A gulp wrapper arround the Golang language. Created to allow users to have more control over the build system. This is specially good for packaging Go application with docker.
You can check the source code here
        </description>
    </item>
    
    <item>
      <title>org-loader</title>
      <link>https://cescoferraro.github.io/me/portifolio/org-loader/</link>
      <pubDate>Fri, 21 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cescoferraro.github.io/me/portifolio/org-loader/</guid>
      <description>A official webpack loader for org files. Org, for those who may not know, is a file extension used on the best text editor there is Emacs for organization purpose&#39;s. The library is published on npm, so using is as hard as typing npm i org-loader
You can check the source code here
        </description>
    </item>
    
    <item>
      <title>spotify.cescoferraro.xyz</title>
      <link>https://cescoferraro.github.io/me/portifolio/spotify/</link>
      <pubDate>Fri, 21 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://cescoferraro.github.io/me/portifolio/spotify/</guid>
      <description>A spotify client that allows the user to perform multiple actions to the üéµ Spotify API. Its a Server-rendered ‚öõ React.js website with a üê∞ Golang backend.
You can check the source code here
            </description>
    </item>
    
    <item>
      <title>Travis SSH</title>
      <link>https://cescoferraro.github.io/me/blog/travis-ssh/</link>
      <pubDate>Tue, 31 Jan 2017 03:55:41 -0300</pubDate>
      
      <guid>https://cescoferraro.github.io/me/blog/travis-ssh/</guid>
      <description>I can deploy ssh machines from travis!</description>
    </item>
    
    <item>
      <title>Web offline support</title>
      <link>https://cescoferraro.github.io/me/blog/web-offline-support/</link>
      <pubDate>Tue, 31 Jan 2017 03:55:41 -0300</pubDate>
      
      <guid>https://cescoferraro.github.io/me/blog/web-offline-support/</guid>
      <description>Here I am using HubSpot/Offline. You can find more information at the Docs.
export const offlineCheck = (store) =&amp;gt; { const { Offline } = (window as any) const upHandler = (e) =&amp;gt; {console.log(&amp;quot;upppp&amp;quot;)} const downHandler = (e) =&amp;gt; {console.log(&amp;quot;downnnnn&amp;quot;)} Offline.options = { checkOnLoad: true, checks: { image: { url: () =&amp;gt; (&amp;quot;https://esri.github.io/offline-editor-js/tiny-image.png?_=&amp;quot; + (Math.floor(Math.random() * 1000000000))) }, active: &amp;quot;image&amp;quot; } } Offline.on(&amp;quot;up&amp;quot;, upHandler) Offline.on(&amp;quot;down&amp;quot;, downHandler) }  </description>
    </item>
    
    <item>
      <title>flag.cescoferraro.xyz </title>
      <link>https://cescoferraro.github.io/me/portifolio/flag/</link>
      <pubDate>Tue, 24 Jan 2017 03:55:41 -0300</pubDate>
      
      <guid>https://cescoferraro.github.io/me/portifolio/flag/</guid>
      <description>A website that manipulates data from a Google Sheets table. You can change data on the website and it will reflect on the actual table! I also used D3 to show some graphics of how the data on the table is ditributed.
You can check the source code here.
        </description>
    </item>
    
    <item>
      <title>Software Developer Career</title>
      <link>https://cescoferraro.github.io/me/blog/software-developer-career/</link>
      <pubDate>Wed, 31 Aug 2016 03:55:41 -0300</pubDate>
      
      <guid>https://cescoferraro.github.io/me/blog/software-developer-career/</guid>
      <description>I have been coding a lot for the past two years. And by crazy I mean at least a little bit everyday, but often all my spare time. Not usually for work, except for a few freelance jobs I have successfully landed, but for FUN. Yes, coding is awesome and I will explain why. I currently work as a on-site Civil Engineer. I have studied quite a bit to get where I am, but the job has become very repetitive with very few new things to learn.</description>
    </item>
    
    <item>
      <title>software</title>
      <link>https://cescoferraro.github.io/me/software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cescoferraro.github.io/me/software/</guid>
      <description>Name Francesco Antonello Ferraro   Graduation Software Engineer   Email francescoaferraro@gmail.com   Birthdate 12/30/1987   Location Porto Alegre/RS - Brazil    Professional Summary   I started off as a Civil Engineer, but felt in love with coding. I have been working in the industry for 4+ in order to constantly engage myself with more complex problems.  I grow up with the Internet, so that my primary focus as a developer.</description>
    </item>
    
  </channel>
</rss>